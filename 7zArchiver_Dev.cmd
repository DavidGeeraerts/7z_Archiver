::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Author:		David Geeraerts												::
:: Location:	Olympia, Washington USA										::
:: E-Mail:		dgeeraerts.evergreen@gmail.com								::
::																			::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Copyleft License(s)
:: GNU GPL (General Public License)
:: https://www.gnu.org/licenses/gpl-3.0.en.html
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Git Information
:: GitHub [https://github.com]
:: GitHub Repository Name: 7z_Archiver
:: HTTPS URI (for cloning)
:: $GITHUB_REPOSITORY_HTTPS_URI=https://github.com/DavidGeeraerts/7z_Archiver.git
:: $GITHUB_REPOSITORY_SSH=
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::
:: Helpful information can be found here:		::
::	http://thedeveloperblog.com/7-zip-examples	::
::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::
:: VERSIONING INFORMATION		::
::  Semantic Versioning used	::
::   http://semver.org/			::
::::::::::::::::::::::::::::::::::

::#############################################################################
::							#DESCRIPTION#
::	SCRIPT STYLE: Intelligent Wrapper (for 7-Zip Archiver)
::
::	The purpose of this script/commandlet is to intelligently process
::		a folder directory to be archived compressed using 7-Zip.
::		Process a single archive or multiple archives.
::
::	Minimally developed for console output. Primarily developed for log output.
::#############################################################################

@Echo Off
@SETLOCAL enableextensions

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
SET SCRIPT_NAME=7zArchiver_Dev
SET SCRIPT_VERSION=3.0.0
SET SCRIPT_BUILD=00018
Title %SCRIPT_NAME% Version: %SCRIPT_VERSION%
Prompt 7z$G
color 8A
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Declare Global variables
::	All User variables are set within here.
::		(configure variables)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: ALL VARIABLES SHOULD BE CONFIGURED IN THE CONFIG FILE!
::	THESE ARE ONLY HERE TO ACT AS DEFAULTS

:: Logging
::	DEFAULT
:: LOG_LOCATION=%USERPROFILE%\Documents
:: LOG_FILE=%SCRIPT_NAME%_%SCRIPT_VERSION%_%COMPUTERNAME%.log

SET LOG_LOCATION=%USERPROFILE%\Documents
SET LOG_FILE=%SCRIPT_NAME%_%COMPUTERNAME%.log


::###########################################################################::
::            *******************
::            Advanced Settings 
::            *******************
::###########################################################################::


:: Config file fall back location
::	Location for Archiver Configuration File(s)
::		Path where the commandlet was executed from, appends "\" to the end
SET "ARCHIVER_CONFIG_DEFAULT_LOCATION=%~dp0"


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::
::##### Everything below here is 'hard-coded' [DO NOT MODIFY] #####
::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: Calculate lapse time by capturing start time
::	Parsing %TIME% variable to get an interger number
FOR /F "tokens=1 delims=:." %%h IN ("%TIME%") DO SET S_hh=%%h
FOR /F "tokens=2 delims=:." %%h IN ("%TIME%") DO SET S_mm=%%h
FOR /F "tokens=3 delims=:." %%h IN ("%TIME%") DO SET S_ss=%%h
FOR /F "tokens=4 delims=:." %%h IN ("%TIME%") DO SET S_ms=%%h
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: CONSOLE OUTPUT WHEN RUNNING Manually
ECHO ********************************************
ECHO. 
ECHO     %SCRIPT_NAME% %SCRIPT_VERSION%
ECHO.
ECHO ********************************************
ECHO.
ECHO.
ECHO Processing...
ECHO.
ECHO.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:fISO8601
:: Function to ensure ISO 8601 Date format yyyy-mmm-dd
ECHO Checking on Powershell...
IF DEFINED PSModulePath @powershell $PSVersionTable.PSVersion || GoTo skipPS
IF NOT EXIST %TEMP%\var MD %TEMP%\var 
IF DEFINED PSModulePath @powershell $PSVersionTable.PSVersion > %TEMP%\var\var_PS_Version.txt
FOR /F "usebackq skip=3 tokens=1 delims= " %%P IN ("%TEMP%\var\var_PS_Version.txt") DO SET "PS_MAJOR_VERSION=%%P"
FOR /F "usebackq skip=3 tokens=2 delims= " %%P IN ("%TEMP%\var\var_PS_Version.txt") DO SET "PS_MINOR_VERSION=%%P"
FOR /F "usebackq skip=3 tokens=3 delims= " %%P IN ("%TEMP%\var\var_PS_Version.txt") DO SET "PS_BUILD_VERSION=%%P"
FOR /F "usebackq skip=3 tokens=4 delims= " %%P IN ("%TEMP%\var\var_PS_Version.txt") DO SET "PS_REVISION_VERSION=%%P"
:: Easiest way to get ISO date
@powershell Get-Date -format "yyyy-MM-dd" > %TEMP%\var\var_ISO8601_Date.txt
SET /P ISO_DATE= < %TEMP%\var\var_ISO8601_Date.txt

:skipPS

:fmanualISO
:: Manually create the ISO 8601 date format
IF DEFINED ISO_DATE GoTo skipfmiso
FOR /F "tokens=2 delims=/ " %%T IN ("%DATE%") DO SET ISO_MONTH=%%T
FOR /F "tokens=3 delims=/ " %%T IN ("%DATE%") DO SET ISO_DAY=%%T
FOR /F "tokens=4 delims=/ " %%T IN ("%DATE%") DO SET ISO_YEAR=%%T
SET ISO_DATE=%ISO_YEAR%-%ISO_MONTH%-%ISO_DAY%

:skipfmiso
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::###########################################################################::
:: Configuration File Settings
::   and dependency check for configuration file!
::###########################################################################::
REM This has to be first to check that a configuration file actually exists
REM	will look for the 'Universal Configuration file, which will load the initial settings,
REM	that can than be overridden with a custom config file.
:://///////////////////////////////////////////////////////////////////////////
SET CONFIG_FILE_NAME=%SCRIPT_NAME%.config
SET ARCHIVER_CONFIG_SCHEMA_VERSION_MIN=3.0.0
IF DEFINED ARCHIVER_CONFIG_DEFAULT_LOCATION IF NOT EXIST "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%" GoTo errCONF ELSE (
	IF NOT EXIST %~dp0%CONFIG_FILE_NAME% GoTo errCONF)
:://///////////////////////////////////////////////////////////////////////////


::###########################################################################::
:: CONFIGURATION FILE OVERRIDE
::###########################################################################::

:: START CONFIGURATION FILE LOAD
ECHO Processing configuration file...
ECHO.
ECHO Working Directory: %ARCHIVER_CONFIG_DEFAULT_LOCATION%
ECHO.
ECHO Configuration file being loaded:
ECHO {%CONFIG_FILE_NAME%}
ECHO ...
ECHO.

:: PARSER FORMAT for Configuration file
:: FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"<VARIABLE>" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "<VARIABLE>=%%V"
:: SET ERROR_CONFIG_PARSE_<VARIABLE>=%ERRORLEVEL%

:: ARCHIVER_CONFIG_SCHEMA_VERSION
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVER_CONFIG_SCHEMA_VERSION" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVER_CONFIG_SCHEMA_VERSION=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVER_CONFIG_SCHEMA_VERSION=%ERRORLEVEL%

:: CHECK the Config file Schema version meets the minimum requirement
SET ARCHIVER_CONFIG_FILE_SCHEMA_CHECK=0
::  Parse schema version from configuration file
FOR /F "tokens=1 delims=." %%V IN ("%ARCHIVER_CONFIG_SCHEMA_VERSION%") DO SET ARCHIVER_CONFIG_SCHEMA_VERSION_MAJOR=%%V
FOR /F "tokens=2 delims=." %%V IN ("%ARCHIVER_CONFIG_SCHEMA_VERSION%") DO SET ARCHIVER_CONFIG_SCHEMA_VERSION_MINOR=%%V
::  Parse schema version from minimum
FOR /F "tokens=1 delims=." %%V IN ("%ARCHIVER_CONFIG_SCHEMA_VERSION_MIN%") DO SET ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MAJOR=%%V
FOR /F "tokens=2 delims=." %%V IN ("%ARCHIVER_CONFIG_SCHEMA_VERSION_MIN%") DO SET ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MINOR=%%V

::  actual check
IF %ARCHIVER_CONFIG_SCHEMA_VERSION_MAJOR% GEQ %ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MAJOR% (SET /A "ARCHIVER_CONFIG_FILE_SCHEMA_CHECK=ARCHIVER_CONFIG_FILE_SCHEMA_CHECK+1") ELSE (GoTo err03)
IF %ARCHIVER_CONFIG_FILE_SCHEMA_CHECK% EQU 1 GoTo skipSC

IF %ARCHIVER_CONFIG_SCHEMA_VERSION_MINOR% GEQ %ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MINOR% (SET /A "ARCHIVER_CONFIG_FILE_SCHEMA_CHECK=ARCHIVER_CONFIG_FILE_SCHEMA_CHECK+1") ELSE (
     ECHO [WARN]	The configuration file [%CONFIG_FILE_NAME%] is using an older schema!)
IF %ARCHIVER_CONFIG_FILE_SCHEMA_CHECK% EQU 0 ECHO [WARN]	Minimum MINOR schema version not met. Will attempt to proceed anyway!
:skipSC


:: LOG_LOCATION
ECHO %LOG_LOCATION% > %TEMP%\var\Log_LOCATION.TXT
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LOCATION" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LOCATION=%%V"
SET ERROR_CONFIG_PARSE_LOG_LOCATION=%ERRORLEVEL%
IF NOT DEFINED LOG_LOCATION SET /P LOG_LOCATION= < %TEMP%\Logs\var\Log_LOCATION.TXT
ECHO LOG_LOCATION: %LOG_LOCATION%

:: LOG_FILE
ECHO %LOG_FILE% > %TEMP%\var\Log_FILE.TXT
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_FILE" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_FILE=%%V"
SET ERROR_CONFIG_PARSE_LOG_FILE=%ERRORLEVEL%
IF NOT DEFINED LOG_FILE SET /P LOG_FILE= < %TEMP%\Logs\var\Log_FILE.TXT
ECHO LOG_FILE: %LOG_FILE%

:: LOG_SHIPPING_LOCATION
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_SHIPPING_LOCATION" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_SHIPPING_LOCATION=%%V"
SET ERROR_CONFIG_PARSE_LOG_SHIPPING_LOCATION=%ERRORLEVEL%

:: ARCHIVE_NAME
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_NAME" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_NAME=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_NAME=%ERRORLEVEL%

:: ARCHIVE_SOURCE_FOLDER
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_SOURCE_FOLDER" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_SOURCE_FOLDER=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_SOURCE_FOLDER=%ERRORLEVEL%

:: ARCHIVE_BULK_FOLDER
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_BULK_FOLDER" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_BULK_FOLDER=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_BULK_FOLDER=%ERRORLEVEL%

:: ARCHIVE_BULK_HASH
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_BULK_HASH" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_BULK_HASH=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_BULK_HASH=%ERRORLEVEL%

:: ARCHIVE_BULK_SHIPPING
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_BULK_SHIPPING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_BULK_SHIPPING=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_BULK_SHIPPING=%ERRORLEVEL%

:: ARCHIVE_BULK_DESTINATION
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_BULK_DESTINATION" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_BULK_DESTINATION=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_BULK_DESTINATION=%ERRORLEVEL%

:: ARCHIVE_ACTION
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_ACTION" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_ACTION=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_ACTION=%ERRORLEVEL%

:: ARCHIVE_SWITCH_STRING
::	this is a work around due to multiple ='s in the switch string.
::	will enhance this feature in future version.
SET ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=0
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET ARCHIVE_SWITCH_STRING=%%V) & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)
FOR /F "tokens=4 delims= " %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET "ARCHIVE_SWITCH_STRING=%ARCHIVE_SWITCH_STRING% %%V") & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)
FOR /F "tokens=5 delims= " %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET "ARCHIVE_SWITCH_STRING=%ARCHIVE_SWITCH_STRING% %%V") & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)
FOR /F "tokens=6 delims= " %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET "ARCHIVE_SWITCH_STRING=%ARCHIVE_SWITCH_STRING% %%V") & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)
FOR /F "tokens=7 delims= " %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET "ARCHIVE_SWITCH_STRING=%ARCHIVE_SWITCH_STRING% %%V") & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)
FOR /F "tokens=8 delims= " %%V IN ('FINDSTR /BC:"ARCHIVE_SWITCH_STRING" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO (SET "ARCHIVE_SWITCH_STRING=%ARCHIVE_SWITCH_STRING% %%V") & (SET /A ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING=ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING+%ERRORLEVEL%)

:: ARCHIVE_CLEAN_UP
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_CLEAN_UP" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_CLEAN_UP=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_CLEAN_UP=%ERRORLEVEL%

:: ARCHIVE_FILE_EXCLUDE
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"ARCHIVE_FILE_EXCLUDE" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "ARCHIVE_FILE_EXCLUDE=%%V"
SET ERROR_CONFIG_PARSE_ARCHIVE_FILE_EXCLUDE=%ERRORLEVEL%

:: LOG_LEVEL_ALL
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_ALL" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_ALL=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_ALL=%ERRORLEVEL%

:: LOG_LEVEL_INFO
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_INFO" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_INFO=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_INFO=%ERRORLEVEL%

:: LOG_LEVEL_WARN
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_WARN" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_WARN=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_WARN=%ERRORLEVEL%

:: LOG_LEVEL_ERROR
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_ERROR" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_ERROR=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_ERROR=%ERRORLEVEL%

:: LOG_LEVEL_FATAL
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_FATAL" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_FATAL=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_FATAL=%ERRORLEVEL%

:: LOG_LEVEL_DEBUG
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_DEBUG" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_DEBUG=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_DEBUG=%ERRORLEVEL%

:: LOG_LEVEL_TRACE
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"LOG_LEVEL_TRACE" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "LOG_LEVEL_TRACE=%%V"
SET ERROR_CONFIG_PARSE_LOG_LEVEL_TRACE=%ERRORLEVEL%

:: DEBUGGER_PC
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"DEBUGGER_PC" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "DEBUGGER_PC=%%V"
SET ERROR_CONFIG_PARSE_DEBUGGER_PC=%ERRORLEVEL%

:: VAR_CLEANUP
FOR /F "tokens=2 delims=^=" %%V IN ('FINDSTR /BC:"VAR_CLEANUP" "%ARCHIVER_CONFIG_DEFAULT_LOCATION%%CONFIG_FILE_NAME%"') DO SET "VAR_CLEANUP=%%V"
SET ERROR_CONFIG_PARSE_VAR_CLEANUP=%ERRORLEVEL%

:: END CONFIGURATION FILE LOAD
ECHO.
ECHO Done processing configuration file.
ECHO.

::###########################################################################::


:: Check Log access and create fallback if needed
IF NOT EXIST %LOG_LOCATION% MD %LOG_LOCATION% || SET LOG_LOCATION=%TEMP%\Logs
ECHO TEST %DATE% %TIME% > %LOG_LOCATION%\test_%LOG_FILE% || SET LOG_LOCATION=%TEMP%\Logs
IF EXIST %LOG_LOCATION%\test_%LOG_FILE% DEL /Q %LOG_LOCATION%\test_%LOG_FILE%
IF NOT EXIST "%LOG_LOCATION%\var" MD "%LOG_LOCATION%\var" || IF NOT EXIST "%TEMP%\Logs" MD "%TEMP%\Logs\var"
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: Check if DEBUGGER PC is running
::	Certain test computers should always have ALL logging turned on
(HOSTNAME | FIND /I "%DEBUGGER_PC%" 2> nul) && (SET LOG_LEVEL_ALL=1) && (SET VAR_CLEANUP=0)
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:flogl
:: FUNCTION: Check and configure for ALL LOG LEVEL, override configuration file
IF %LOG_LEVEL_ALL% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: function Check for ALL log level!) >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_INFO=1
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_WARN=1
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_ERROR=1
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_FATAL=1
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_DEBUG=1
IF %LOG_LEVEL_ALL% EQU 1 SET LOG_LEVEL_TRACE=1
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: function Check for ALL log level!) >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:start
:: Start of ALL logging
IF %LOG_LEVEL_ALL% EQU 1 (ECHO %ISO_DATE% %TIME% [DEBUG]	DEGUGGER START...) >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_ALL% EQU 1 (ECHO %ISO_DATE% %TIME% [DEBUG]	ALL logging is turned on!) >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: General Information
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: General Information...) >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	START... >> %LOG_LOCATION%\%LOG_FILE%
IF NOT EXIST %LOG_LOCATION%\var\var_systeminfo_TimeZone.txt (
	FOR /F "tokens=2-5 delims=()&" %%S IN ('systeminfo ^| FIND /I "Time Zone"') Do ECHO %%S%%T%%U%%V > %LOG_LOCATION%\var\var_systeminfo_TimeZone.txt
	) && IF EXIST "%LOG_LOCATION%\var\var_systeminfo_TimeZone.txt" IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	File {var_systeminfo_TimeZone.txt} created! >> %LOG_LOCATION%\%LOG_FILE%
SET /P var_TimeZone= < %LOG_LOCATION%\var\var_systeminfo_TimeZone.txt
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Time Zone: %var_TimeZone% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	SCRIPT: %SCRIPT_NAME% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	SCRIPT Version: %SCRIPT_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	SCRIPT_BUILD: %SCRIPT_BUILD% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Computer: %COMPUTERNAME% >> %LOG_LOCATION%\%LOG_FILE%

IF NOT EXIST %LOG_LOCATION%\var\var_systeminfo_OsName.txt (
	FOR /F "tokens=3-6" %%G IN ('systeminfo ^| FIND /I "OS NAME"') DO ECHO OS Name: %%G %%H %%I %%J > %LOG_LOCATION%\var\var_systeminfo_OsName.txt
	 ) 
SET /P var_SYSTEMINFO_OSNAME= < %LOG_LOCATION%\var\var_systeminfo_OsName.txt
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	%var_SYSTEMINFO_OSNAME% >> %LOG_LOCATION%\%LOG_FILE%

IF NOT EXIST %LOG_LOCATION%\var\var_VER.txt (
	FOR /F "skip=1 tokens=2 delims=[]" %%G IN ('ver') DO ECHO %%G > %LOG_LOCATION%\var\var_VER.txt)
IF EXIST %LOG_LOCATION%\var\var_VER.txt SET /P var_OS_VER= < %LOG_LOCATION%\var\var_VER.txt
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	OS: %var_OS_VER% >> %LOG_LOCATION%\%LOG_FILE%

whoami > %LOG_LOCATION%\var\var_WHOAMI.txt
SET /P $USER= < %LOG_LOCATION%\var\var_WHOAMI.txt
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	User: %$USER% >> %LOG_LOCATION%\%LOG_FILE%

:: Domain user check
:: needed to check against network resources
SET DOMAIN_USER_STATUS=0
(WHOAMI /FQDN 2> nul) && SET DOMAIN_USER_STATUS=1
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: DOMAIN_USER_STATUS: %DOMAIN_USER_STATUS% >> %LOG_LOCATION%\%LOG_FILE%

:: Domain User debugging
IF %DOMAIN_USER_STATUS% EQU 1 ECHO Domain User deatils:
IF %LOG_LEVEL_DEBUG% EQU 1 IF %DOMAIN_USER_STATUS% EQU 1 whoami /UPN > %LOG_LOCATION%\var\var_whoami_upn.txt
IF %LOG_LEVEL_DEBUG% EQU 1 IF EXIST "%LOG_LOCATION%\var\var_whoami_upn.txt" SET /P $USER_UPN= < %LOG_LOCATION%\var\var_whoami_upn.txt
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	User UPN: %$USER_UPN% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_DEBUG% EQU 1 IF %DOMAIN_USER_STATUS% EQU 1 WhoAmI /FQDN > %LOG_LOCATION%\var\var_WHOAMI_FQDN.txt
IF %LOG_LEVEL_DEBUG% EQU 1 IF EXIST "%LOG_LOCATION%\var\var_WHOAMI_FQDN.txt" SET /P $USER_FQDN= < %LOG_LOCATION%\var\var_WHOAMI_FQDN.txt
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	%$USER_FQDN% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_DEBUG% EQU 1 whoami /logonid > %LOG_LOCATION%\var\var_WHOAMI_LOGONID.txt
IF %LOG_LEVEL_DEBUG% EQU 1 IF EXIST "%LOG_LOCATION%\var\var_WHOAMI_LOGONID.txt" SET /P $USER_LOGONID= < %LOG_LOCATION%\var\var_WHOAMI_LOGONID.txt
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	LOGONID: %$USER_LOGONID% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: General Information.) >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::###########################################################################
:: VARIABLE DEBUG OUTPUT
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO ########################################################################## >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: VARIABLE DEBUG...) >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_DEBUG% EQU 0 GoTo varE
ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE DEBUG is numeric alpha sorted! >> %LOG_LOCATION%\%LOG_FILE%
ECHO.
ECHO %ISO_DATE% %TIME% [DEBUG]	S_hh: {%S_hh%} >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	S_mm: {%S_mm%} >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	S_ss: {%S_ss%} >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	S_mm: {%S_mm%} >> %LOG_LOCATION%\%LOG_FILE%
ECHO.
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_ACTION: %ARCHIVE_ACTION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_BULK_FOLDER: %ARCHIVE_BULK_FOLDER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_BULK_HASH: %ARCHIVE_BULK_HASH% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_BULK_SHIPPING: %ARCHIVE_BULK_SHIPPING% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_BULK_DESTINATION: %ARCHIVE_BULK_DESTINATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_CLEAN_UP: %ARCHIVE_CLEAN_UP% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_FILE_EXCLUDE: %ARCHIVE_FILE_EXCLUDE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_NAME: %ARCHIVE_NAME% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_SOURCE_FOLDER: %ARCHIVE_SOURCE_FOLDER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVE_SWITCH_STRING: %ARCHIVE_SWITCH_STRING% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_DEFAULT_LOCATION: %ARCHIVER_CONFIG_DEFAULT_LOCATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_FILE_SCHEMA_CHECK: %ARCHIVER_CONFIG_FILE_SCHEMA_CHECK% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_SCHEMA_VERSION_MIN: %ARCHIVER_CONFIG_SCHEMA_VERSION_MIN% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_SCHEMA_VERSION_MAJOR: %ARCHIVER_CONFIG_SCHEMA_VERSION_MAJOR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_SCHEMA_VERSION_MINOR: %ARCHIVER_CONFIG_SCHEMA_VERSION_MINOR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MAJOR: %ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MAJOR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MINOR: %ARCHIVER_CONFIG_SCHEMA_VERSION_MIN_MINOR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	CONFIG_FILE_NAME: %CONFIG_FILE_NAME% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	CURRENT DIRECTORY: {%CD%} >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	DEBUGGER_PC: %DEBUGGER_PC% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	DOMAIN_USER_STATUS: %DOMAIN_USER_STATUS% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_ACTION: %ERROR_CONFIG_PARSE_ARCHIVE_ACTION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_BULK_FOLDER: %ERROR_CONFIG_PARSE_ARCHIVE_BULK_FOLDER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_BULK_HASH: %ERROR_CONFIG_PARSE_ARCHIVE_BULK_HASH% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_BULK_SHIPPING: %ERROR_CONFIG_PARSE_ARCHIVE_BULK_SHIPPING% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_BULK_DESTINATION: %ERROR_CONFIG_PARSE_ARCHIVE_BULK_DESTINATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_CLEAN_UP: %ERROR_CONFIG_PARSE_ARCHIVE_CLEAN_UP% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_FILE_EXCLUDE: %ERROR_CONFIG_PARSE_ARCHIVE_FILE_EXCLUDE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_NAME: %ERROR_CONFIG_PARSE_ARCHIVE_NAME% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_SOURCE_FOLDER: %ERROR_CONFIG_PARSE_ARCHIVE_SOURCE_FOLDER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING: %ERROR_CONFIG_PARSE_ARCHIVE_SWITCH_STRING% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_ARCHIVER_CONFIG_SCHEMA_VERSION: %ERROR_CONFIG_PARSE_ARCHIVER_CONFIG_SCHEMA_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_DEBUGGER_PC: %ERROR_CONFIG_PARSE_DEBUGGER_PC% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_FILE: %ERROR_CONFIG_PARSE_LOG_FILE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_ALL: %ERROR_CONFIG_PARSE_LOG_LEVEL_ALL% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_DEBUG: %ERROR_CONFIG_PARSE_LOG_LEVEL_DEBUG% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_ERROR: %ERROR_CONFIG_PARSE_LOG_LEVEL_ERROR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_FATAL: %ERROR_CONFIG_PARSE_LOG_LEVEL_FATAL% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_INFO: %ERROR_CONFIG_PARSE_LOG_LEVEL_INFO% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_TRACE: %ERROR_CONFIG_PARSE_LOG_LEVEL_TRACE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LEVEL_WARN: %ERROR_CONFIG_PARSE_LOG_LEVEL_WARN% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_LOCATION: %ERROR_CONFIG_PARSE_LOG_LOCATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_LOG_SHIPPING_LOCATION: %ERROR_CONFIG_PARSE_LOG_SHIPPING_LOCATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ERROR_CONFIG_PARSE_VAR_CLEANUP: %ERROR_CONFIG_PARSE_VAR_CLEANUP% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ISO_DATE: %ISO_DATE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ISO_DAY: %ISO_DAY% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ISO_MONTH: %ISO_MONTH% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	ISO_YEAR: %ISO_YEAR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_FILE: %LOG_FILE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_ALL: %LOG_LEVEL_ALL% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_DEBUG: %LOG_LEVEL_DEBUG% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_ERROR: %LOG_LEVEL_ERROR% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_FATAL: %LOG_LEVEL_FATAL% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_INFO: %LOG_LEVEL_INFO% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_TRACE: %LOG_LEVEL_TRACE% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LEVEL_WARN: %LOG_LEVEL_WARN% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_LOCATION: %LOG_LOCATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	LOG_SHIPPING_LOCATION: %LOG_SHIPPING_LOCATION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	PS_MAJOR_VERSION: %PS_MAJOR_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	PS_MINOR_VERSION: %PS_MINOR_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	PS_BUILD_VERSION: %PS_BUILD_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	PS_REVISION_VERSION: %PS_REVISION_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	SCRIPT_NAME: %SCRIPT_NAME% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	SCRIPT_VERSION: %SCRIPT_VERSION% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	VAR_CLEANUP: %VAR_CLEANUP% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	var_SYSTEMINFO_OSNAME: %var_SYSTEMINFO_OSNAME% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	var_OS_VER: %var_OS_VER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	var_TimeZone: %var_TimeZone% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	$USER: %$USER% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	$USER_FQDN: %$USER_FQDN% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	$USER_LOGONID: %$USER_LOGONID% >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	$USER_UPN: %$USER_UPN% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: VARIABLE DEBUG...) >> %LOG_LOCATION%\%LOG_FILE%
ECHO %ISO_DATE% %TIME% [DEBUG]	########################################################################### >> %LOG_LOCATION%\%LOG_FILE%
:varE
::###########################################################################
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: 7z Checking
:: Make sure the command shell has path to the 7z executable
IF %LOG_LEVEL_TRACE% EQU 1 ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: 7z exe check... >> %LOG_LOCATION%\%LOG_FILE%
SET $7z_STATUS=0
PATH | FIND /I "7-Zip" || DIR "%PROGRAMFILES%\" /S /B /A-D | FIND /I "7z.exe" && PATH=%PATH%;"C:\Program Files\7-Zip"
7z i | FIND /I "7z" && SET $7z_STATUS=1
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: $7z_STATUS: %$7z_STATUS% >> %LOG_LOCATION%\%LOG_FILE%
IF %$7z_STATUS% EQU 1 IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	7z executable found! >> %LOG_LOCATION%\%LOG_FILE%
IF %$7z_STATUS% EQU 0 GoTo err01
IF %LOG_LEVEL_TRACE% EQU 1 ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: 7z exe check. >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: 7z Archive Type extraction
IF %LOG_LEVEL_TRACE% EQU 1 ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: 7z Archive Type extraction... >> %LOG_LOCATION%\%LOG_FILE%
ECHO.
IF DEFINED ARCHIVE_SWITCH_STRING ECHO 7z switch string: 
(ECHO %ARCHIVE_SWITCH_STRING% | FIND /I "-t7z") && (SET $7z_ARCHIVE_TYPE=.7z)
IF NOT DEFINED $7z_ARCHIVE_TYPE ECHO %ARCHIVE_SWITCH_STRING% | (FIND /I "-tzip") && (SET $7z_ARCHIVE_TYPE=.zip)
IF NOT DEFINED $7z_ARCHIVE_TYPE ECHO %ARCHIVE_SWITCH_STRING% | (FIND /I "-tiso") && (SET $7z_ARCHIVE_TYPE=.iso)
IF NOT DEFINED $7z_ARCHIVE_TYPE ECHO %ARCHIVE_SWITCH_STRING% | (FIND /I "-tudf") && (SET $7z_ARCHIVE_TYPE=.udf)
IF NOT DEFINED $7z_ARCHIVE_TYPE ECHO %ARCHIVE_SWITCH_STRING% | (FIND /I "-ttar") && (SET $7z_ARCHIVE_TYPE=.tar)
IF NOT DEFINED $7z_ARCHIVE_TYPE ECHO %ARCHIVE_SWITCH_STRING% | (FIND /I "-tgzip") && (SET $7z_ARCHIVE_TYPE=.gzip)
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: $7z_ARCHIVE_TYPE: %$7z_ARCHIVE_TYPE% >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_TRACE% EQU 1 ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: 7z Archive Type extraction... >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::	##### SINGLE ARCHIVER ##### 
:SA
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: SINGLE ARCHIVER...) >> %LOG_LOCATION%\%LOG_FILE%
IF NOT DEFINED ARCHIVE_SOURCE_FOLDER GoTo skipSA
IF NOT DEFINED ARCHIVE_NAME GoTo skipSA
ECHO Processing Single Archive operation on [%ARCHIVE_SOURCE_FOLDER%]...

IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Processing Single Archive operation on [%ARCHIVE_SOURCE_FOLDER%]... >> %LOG_LOCATION%\%LOG_FILE%
CD /D "%ARCHIVE_SOURCE_FOLDER%"
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: CURRENT_DIRECTORY: %CD% >> %LOG_LOCATION%\%LOG_FILE%

:: Variable names should not contain numeric character nor any special characters except for "_".
IF DEFINED ARCHIVE_SOURCE_FOLDER 7z %ARCHIVE_ACTION% %ARCHIVE_SWITCH_STRING% %ARCHIVE_FILE_EXCLUDE% "%ARCHIVE_NAME%" "%ARCHIVE_SOURCE_FOLDER%"

SET ARCHIVE_SA_ERRORLEVEL=%ERRORLEVEL%
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: ARCHIVE_SA_ERRORLEVEL: %ARCHIVE_SA_ERRORLEVEL% >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 0 IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	7z reported no errors! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 1 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	7z Warning Non fatal errors. For example, one or more files were locked by some other application, so they were not compressed. >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 2 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Fatal error! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 7 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Command line error! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 8 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Not enough memory for operation! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_ERRORLEVEL% EQU 255 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	7z reported that User stopped the process! >> %LOG_LOCATION%\%LOG_FILE%

:: Create SHA256 hash
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: SINGLE ARCHIVER SHA256...) >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: ARCHIVE_NAME.$7z_ARCHIVE_TYPE: %ARCHIVE_NAME%%$7z_ARCHIVE_TYPE% >> %LOG_LOCATION%\%LOG_FILE%
IF EXIST "%ARCHIVE_NAME%%$7z_ARCHIVE_TYPE%" 7z h -scrcsha256 "%ARCHIVE_NAME%%$7z_ARCHIVE_TYPE%" >> %LOG_LOCATION%\%LOG_FILE%
SET ARCHIVE_SA_SHA_ERRORLEVEL=%ERRORLEVEL%
IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: ARCHIVE_SA_SHA_ERRORLEVEL: %ARCHIVE_SA_SHA_ERRORLEVEL% >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 0 IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	7z reported no errors! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 1 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	7z Warning Non fatal errors. For example, one or more files were locked by some other application, so they were not compressed. >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 2 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Fatal error! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 7 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Command line error! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 8 IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	7z Not enough memory for operation! >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_SA_SHA_ERRORLEVEL% EQU 255 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	7z reported that User stopped the process! >> %LOG_LOCATION%\%LOG_FILE%
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: SINGLE ARCHIVER SHA256.) >> %LOG_LOCATION%\%LOG_FILE%
:: Not going to delete a folder that is set for bulk processing
:: Not going to delete the folder that the log file is logging to
IF DEFINED ARCHIVE_BULK_FOLDER GoTo skipSA
IF "%ARCHIVE_SOURCE_FOLDER%"=="%LOG_LOCATION%" GoTo skipSA
IF %ARCHIVE_CLEAN_UP% EQU 1 IF EXIST %ARCHIVE_SOURCE_FOLDER% RD /S /Q "%ARCHIVE_SOURCE_FOLDER%"

:skipSA
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: SINGLE ARCHIVER.) >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


::	##### BULK ARCHIVE PROCESS ##### 
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	ENTER: BULK ARCHIVER...) >> %LOG_LOCATION%\%LOG_FILE%
IF NOT DEFINED ARCHIVE_BULK_FOLDER GoTo skipBA
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Processing Bulk Archive operation on [%ARCHIVE_BULK_FOLDER%]... >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_BULK_HASH% EQU 0 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	Bulk Archive file hashing turned off! >> %LOG_LOCATION%\%LOG_FILE%

:BA
ECHO.
ECHO Processing Bulk Archive operation on [%ARCHIVE_BULK_FOLDER%]...
:: NOTES
::	When trying to catch the %ERRORLEVEL% from 7z and set the error level for 7z as ARCHIVE_BULK_CODE, it wouldn't set if 7z was configured output to file i.e. ">>"
::	...this is a workaround to the problem 
FOR /F %%Z IN ('DIR /B /A:D "%ARCHIVE_BULK_FOLDER%"') DO (7z %ARCHIVE_ACTION% %ARCHIVE_SWTICH_STRING% %ARCHIVE_FILE_EXCLUDE% "%ARCHIVE_BULK_FOLDER%\%%Z" "%ARCHIVE_BULK_FOLDER%\%%Z" >> %LOG_LOCATION%\%LOG_FILE%) & ((ECHO %ERRORLEVEL%)> %LOG_LOCATION%\var\var_ARCHIVER_BULK_CODE_%%Z.txt) & (IF %ARCHIVE_BULK_HASH% EQU 1 IF EXIST "%ARCHIVE_BULK_FOLDER%\%%Z" 7z h -scrcsha256 "%ARCHIVE_BULK_FOLDER%\%%Z" >> %LOG_LOCATION%\%LOG_FILE%)
ECHO. >> %LOG_LOCATION%\%LOG_FILE%

IF %ARCHIVE_BULK_HASH% EQU 0 GoTo skipHA
:: Get the hash for each archive file
FOR /F %%H IN ('DIR /B /A:-D "%ARCHIVE_BULK_FOLDER%"') DO 7z h -scrcsha256 "%ARCHIVE_BULK_FOLDER%\%%H" >> %LOG_LOCATION%\%LOG_FILE%
:skipHA


:: Bulk Archive file shipping
IF %ARCHIVE_BULK_SHIPPING% EQU 1 ROBOCOPY "%ARCHIVE_BULK_FOLDER%" "%ARCHIVE_BULK_DESTINATION%" *%$7z_ARCHIVE_TYPE% /MOV /R:2 /W:60 /NP /UNILOG+:%LOG_LOCATION%\%LOG_FILE%


IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Checking to see if source folders should be deleted... >> %LOG_LOCATION%\%LOG_FILE%

IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	VARIABLE: ARCHIVE_CLEAN_UP: %ARCHIVE_CLEAN_UP% >> %LOG_LOCATION%\%LOG_FILE%
IF %ARCHIVE_CLEAN_UP% EQU 1 IF %LOG_LEVEL_WARN% EQU 1 ECHO %ISO_DATE% %TIME% [WARN]	Bulk archive folder {%ARCHIVE_BULK_FOLDER%} will be deleted! >> %LOG_LOCATION%\%LOG_FILE%
FOR /F %%K IN ('DIR /B /A:D "%ARCHIVE_BULK_FOLDER%"') Do (TYPE %LOG_LOCATION%\var\var_ARCHIVER_BULK_CODE_%%K.txt | FIND "0") && (IF %ARCHIVE_CLEAN_UP% EQU 1 IF EXIST "%ARCHIVE_BULK_FOLDER%\%%K" RD /S /Q "%ARCHIVE_BULK_FOLDER%\%%K") & (IF %LOG_LEVEL_DEBUG% EQU 1 ECHO %ISO_DATE% %TIME% [DEBUG]	%%K ARCHIVER_BULK_CODE is 0 >> %LOG_LOCATION%\%LOG_FILE%)
:skipBA
IF %LOG_LEVEL_TRACE% EQU 1 (ECHO %ISO_DATE% %TIME% [TRACE]	EXIT: BULK ARCHIVER.) >> %LOG_LOCATION%\%LOG_FILE%
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:Clean
IF %VAR_CLEANUP% EQU 0 GoTo skipClean
IF EXIST "%LOG_LOCATION%\var" RD /S /Q "%LOG_LOCATION%\var"
IF NOT EXIST "%LOG_LOCATION%\var" ECHO %ISO_DATE% %TIME% [DEBUG]	var folder deleted! >> %LOG_LOCATION%\%LOG_FILE%
:skipClean
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:: Skip the error section
GoTo Time

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::                    START ERROR SECTION
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:://///////////////////////////////////////////////////////////////////////////
:: ERROR LEVEL 00's (DEPENDENCY ERROR)

:errCONF
:: ERROR CONF is a FATAL ERROR for NO configuration file
CLS
Color 4E
ECHO ********************************************
ECHO. 
ECHO %SCRIPT_NAME% %SCRIPT_VERSION%
ECHO.
ECHO ********************************************
ECHO.
ECHO.
IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	FATAL ERROR! NO CONFIGURATION FILE [.\%CONFIG_FILE_NAME%] FOUND! >> %LOG_LOCATION%\%LOG_FILE%
ECHO FATAL ERROR! NO CONFIGURATION FILE [.\%CONFIG_FILE_NAME%] FOUND!
TIMEOUT 60
IF EXIST "%LOG_LOCATION%\%LOG_FILE%" GoTo Time ELSE (EXIT)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: ERROR 01 (7z NOT FOUND)
:err01
Color 4E
CLS
ECHO ********************************************
ECHO. 
ECHO %SCRIPT_NAME% %SCRIPT_VERSION%
ECHO.
ECHO ********************************************
ECHO.
ECHO.
IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	FATAL ERROR! 7z was not found on the system! >> %LOG_LOCATION%\%LOG_FILE%
ECHO FATAL ERROR! 7z was not found on the system!
TIMEOUT 60
IF EXIST "%LOG_LOCATION%\%LOG_FILE%" GoTo Time ELSE (EXIT)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:err03
:: ERROR 03 (Configuration file schema doesn't meet minimum version)
CLS
Color 4E
ECHO ********************************************
ECHO. 
ECHO %SCRIPT_NAME% %SCRIPT_VERSION%
ECHO.
ECHO ********************************************
ECHO.
ECHO.
IF %LOG_LEVEL_FATAL% EQU 1 ECHO %ISO_DATE% %TIME% [FATAL]	FATAL ERROR! CONFIGURATION FILE [.\%$CONFIG_FILE_NAME%] SCHEMA DOESN'T MEET MINIMUM VERSION! >> %LOG_LOCATION%\%LOG_FILE%
ECHO CONFIGURATION FILE SCHEMA DOESN'T MEET MINIMUM VERSION!
TIMEOUT 60
IF EXIST "%LOG_LOCATION%\%LOG_FILE%" GoTo Time ELSE (EXIT)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:://///////////////////////////////////////////////////////////////////////////


IF DEFINED LOG_SHIPPING_LOCATION IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	The log file shipping set. Will attempt to ship log! >> %LOG_LOCATION%\%LOG_FILE%
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:Time
:: Calculate lapse time by capturing end time
::	Parsing %TIME% variable to get an interger number
FOR /F "tokens=1 delims=:." %%h IN ("%TIME%") DO SET E_hh=%%h
FOR /F "tokens=2 delims=:." %%h IN ("%TIME%") DO SET E_mm=%%h
FOR /F "tokens=3 delims=:." %%h IN ("%TIME%") DO SET E_ss=%%h
FOR /F "tokens=4 delims=:." %%h IN ("%TIME%") DO SET E_ms=%%h

:: Calculate the actual lapse time
IF %E_hh% GEQ %S_hh% (SET /A "L_hh=%E_hh%-%S_hh%") ELSE (SET /A "L_hh=%S_hh%-%E_hh%")
IF %E_mm% GEQ %S_mm% (SET /A "L_mm=%E_mm%-%S_mm%") ELSE (SET /A "L_mm=%S_mm%-%E_mm%")
IF %E_ss% GEQ %S_ss% (SET /A "L_ss=%E_ss%-%S_ss%") ELSE (SET /A "L_ss=%S_ss%-%E_ss%")
IF %E_ms% GEQ %S_ms% (SET /A "L_ms=%E_ms%-%S_ms%") ELSE (SET /A "L_ms=%S_ms%-%E_ms%")
:: turn hours into minutes and add to total minutes
IF %L_hh% GTR 0 SET /A "L_hhh=%L_hh%*60"
IF %L_hh% EQU 0 SET L_hhh=0
IF %L_hhh% GTR 0 SET /A "L_tm=%L_hhh%+%L_mm%"
IF %L_hhh% EQU 0 SET L_tm=%L_mm%
:: Lapse Time
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	Time Lapsed (mm:ss.ms): %L_tm%:%L_ss%.%L_ms% >> %LOG_LOCATION%\%LOG_FILE%
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:EOF
IF %LOG_LEVEL_INFO% EQU 1 ECHO %ISO_DATE% %TIME% [INFO]	END. >> %LOG_LOCATION%\%LOG_FILE%
ECHO. >> %LOG_LOCATION%\%LOG_FILE%

:: LOG SHIPPING
IF %DOMAIN_USER_STATUS% EQU 1 IF DEFINED LOG_SHIPPING_LOCATION IF NOT EXIST "%LOG_SHIPPING_LOCATION%" MD "%LOG_SHIPPING_LOCATION%"
IF %DOMAIN_USER_STATUS% EQU 1 IF DEFINED LOG_SHIPPING_LOCATION COPY /Y "%LOG_LOCATION%\%LOG_FILE%" "%LOG_SHIPPING_LOCATION%"

Exit /B